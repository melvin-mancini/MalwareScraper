import axios from 'axios';
import cheerio from 'cheerio';
import { config } from "./config";
import * as utils from './utils';
import { Redis } from './redis'
import { Malware } from './malwareModel'


export async function scrape() : Promise<boolean> {
    return new Promise<boolean>((resolve, reject) => {
        axios.get(config.ENDPOINT)
            .then( async (response) => {
                if(!axios.isAxiosError(response))
                {
                    try{
                        await scrapePage(response)
                        resolve(true)
                    }
                    catch(error){
                        reject(false)
                    }
                }
            })
            .catch( (error) => {
                console.log("Error during GET request: " + error)
                reject(false)
            })
    })

}

async function scrapePage(response)
{
    return new Promise<boolean>(async (resolve, reject) => {

        const html = response.data; // Get the HTML from the HTTP request
        const $ = cheerio.load(html);
        const redis = new Redis()
        let malwareAnalyzed = 0

        let promises = $("table > tbody > tr").map( async (index, element) => {
           let sha = $($(element).find("td")[2]).text()
           let malwareExists = await redis.malwareExists(sha)
           if (index > 0 && !malwareExists )
           {
                malwareAnalyzed++
                return new Promise<boolean>(async (resolve, reject) => {
                    try{
                        await parsePage($, element, redis)
                        resolve(true)
                    } catch(error)
                    {
                        reject(false)
                    }
                 })
             }
        })


        try{
          await Promise.allSettled(promises)
          await redis.insertMalwareAnalized(utils.getTimestamp(), malwareAnalyzed)
          resolve(true)
        }
        catch(error)
        {
          reject(false)
        }
    })
}

async function parsePage( $ : cheerio.Root, element : cheerio.Element, redis : Redis) : Promise<boolean>
{ 
    try{
            let sha = $($(element).find("td")[2]).text()
            let threatName = $($(element).find("td")[0]).text()
            let linkDownload = $($(element).find("td")[1]).find('a').attr('href')
            let password = utils.generatePassword()
            let localPath = config.DEST_FOLDER
            let downloadError = await utils.downloadFile(linkDownload, threatName, password);

            let malwareObj = new Malware(threatName, sha, localPath, password, downloadError)

            console.log(malwareObj)

            await redis.insertMalware(malwareObj)
            return true
    }
    catch(error){
        return false
    }
}